3.2.14 (Media Mark)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@has_childrenT:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@children[o:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;[ :
@linei:@options{ o:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;[ ;i;@o:Sass::Tree::VariableNode:@guarded"!default:
@name" default-transition-property;[ :
@expro:Sass::Script::String	;:identifier;"all;i;@;i;@o;;"!default;" default-transition-duration;[ ;o:Sass::Script::Number:@numerator_units["s:@original"1s;i;i;@:@denominator_units[ ;i;@o;;"!default;" default-transition-function;[ ;o:Sass::Script::Bool;F;i;@;i;@o;;"!default;"default-transition-delay;[ ;o;;F;i;@;i;@o;;"!default;"#transitionable-prefixed-values;[ ;o:Sass::Script::List	;[o;	;;;"transform;i;@o;	;;;"transform-origin;i;@:@separator:
comma;i;@;i;@o;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;[ ;i!;@o:Sass::Tree::MixinDefNode:
@args[[o:Sass::Script::Variable:@underscored_name"property_1;"property-1;@o;"	;#" default_transition_property;" default-transition-property;i&;@[o;";#"property_2;"property-2;@o;;F;i';@[o;";#"property_3;"property-3;@o;;F;i(;@[o;";#"property_4;"property-4;@o;;F;i);@[o;";#"property_5;"property-5;@o;;F;i*;@[o;";#"property_6;"property-6;@o;;F;i+;@[o;";#"property_7;"property-7;@o;;F;i,;@[o;";#"property_8;"property-8;@o;;F;i-;@[o;";#"property_9;"property-9;@o;;F;i.;@[o;";#"property_10;"property-10;@o;;F;i/;@;T;"transition-property;[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@linei1:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"property_1:
@name"property-1;i1;@	:@keywords{ ;"type-of;i1:@splat0;@	;i1;@	0[o:Sass::Tree::VariableNode:@guarded0;"property-1:@children[ :
@expro;;[o;	;"property_1;"property-1;i1;@	;{ ;"unquote;i1;0;@	;i1;@	o;;0;"properties;[ ;o:Sass::Script::Funcall;![o;"	;#"property_1;"property-1;i2;@o;"	;#"property_2;"property-2;i2;@o;"	;#"property_3;"property-3;i2;@o;"	;#"property_4;"property-4;i2;@o;"	;#"property_5;"property-5;i2;@o;"	;#"property_6;"property-6;i2;@o;"	;#"property_7;"property-7;i2;@o;"	;#"property_8;"property-8;i2;@o;"	;#"property_9;"property-9;i2;@o;"	;#"property_10;"property-10;i2;@:@keywords{ ;"compact;i2:@splat0;@;i2;@u;$Å[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:
@linei3:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;i3;	@	o; 	;"properties;"properties;i3;	@	:@keywords{ ;"prefixed-for-transition;i3:@splat0;	@	:
@tabsi ;[" -webkit-transition-property:@children[ ;i3;	@	:@prop_syntax:newu;$Á[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:
@linei4:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;i4;	@	o; 	;"properties;"properties;i4;	@	:@keywords{ ;"prefixed-for-transition;i4:@splat0;	@	:
@tabsi ;["-moz-transition-property:@children[ ;i4;	@	:@prop_syntax:newu;$¹[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:
@linei5:@options{ 0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:
@args[o:Sass::Script::String	:
@type:identifier;"-o;i5;	@	o; 	;"properties;"properties;i5;	@	:@keywords{ ;"prefixed-for-transition;i5:@splat0;	@	:
@tabsi ;["-o-transition-property:@children[ ;i5;	@	:@prop_syntax:newo:Sass::Tree::PropNode;o;"	;#"properties;"properties;i6;@:
@tabsi ;["transition-property;[ ;i6;@:@prop_syntax:new;i0;'0;@o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;[ ;i9;@o; ;![[o;";#"duration_1;"duration-1;@o;"	;#" default_transition_duration;" default-transition-duration;i>;@[o;";#"duration_2;"duration-2;@o;;F;i?;@[o;";#"duration_3;"duration-3;@o;;F;i@;@[o;";#"duration_4;"duration-4;@o;;F;iA;@[o;";#"duration_5;"duration-5;@o;;F;iB;@[o;";#"duration_6;"duration-6;@o;;F;iC;@[o;";#"duration_7;"duration-7;@o;;F;iD;@[o;";#"duration_8;"duration-8;@o;;F;iE;@[o;";#"duration_9;"duration-9;@o;;F;iF;@[o;";#"duration_10;"duration-10;@o;;F;iG;@;T;"transition-duration;[u;$Ù[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@lineiI:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1:
@name"duration-1;iI;@	:@keywords{ ;"type-of;iI:@splat0;@	;iI;@	0[o:Sass::Tree::VariableNode:@guarded0;"duration-1:@children[ :
@expro;;[o;	;"duration_1;"duration-1;iI;@	;{ ;"unquote;iI;0;@	;iI;@	o;;0;"durations;[ ;o;%;![o;"	;#"duration_1;"duration-1;iJ;@o;"	;#"duration_2;"duration-2;iJ;@o;"	;#"duration_3;"duration-3;iJ;@o;"	;#"duration_4;"duration-4;iJ;@o;"	;#"duration_5;"duration-5;iJ;@o;"	;#"duration_6;"duration-6;iJ;@o;"	;#"duration_7;"duration-7;iJ;@o;"	;#"duration_8;"duration-8;iJ;@o;"	;#"duration_9;"duration-9;iJ;@o;"	;#"duration_10;"duration-10;iJ;@;&{ ;"compact;iJ;'0;@;iJ;@o:Sass::Tree::MixinNode;![o;	;;;"transition-duration;iK;@o;"	;#"durations;"durations;iK;@o;	;;;"	-moz;iL;@o;	;;;"-webkit;iL;@o;	;;;"-o;iL;@o:!Sass::Script::UnaryOperation	:@operator:not;iL;@:@operando;	;;;"-ms;iL;@o;-	;.;/;iL;@;0o;	;;;"-khtml;iL;@o;	;;;"official;iL;@;&{ ;"experimental;[ ;iM;'0;@;iH;'0;@o;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;[ ;iP;@o; ;![[o;";#"function_1;"function-1;@o;"	;#" default_transition_function;" default-transition-function;iV;@[o;";#"function_2;"function-2;@o;;F;iW;@[o;";#"function_3;"function-3;@o;;F;iX;@[o;";#"function_4;"function-4;@o;;F;iY;@[o;";#"function_5;"function-5;@o;;F;iZ;@[o;";#"function_6;"function-6;@o;;F;i[;@[o;";#"function_7;"function-7;@o;;F;i\;@[o;";#"function_8;"function-8;@o;;F;i];@[o;";#"function_9;"function-9;@o;;F;i^;@[o;";#"function_10;"function-10;@o;;F;i_;@;T;"transition-timing-function;[o;;0;"function-1;[ ;o;%;![o;"	;#"function_1;"function-1;ia;@;&{ ;"unquote;ia;'0;@;ia;@o;;0;"functions;[ ;o;%;![o;"	;#"function_1;"function-1;ib;@o;"	;#"function_2;"function-2;ib;@o;"	;#"function_3;"function-3;ib;@o;"	;#"function_4;"function-4;ib;@o;"	;#"function_5;"function-5;ib;@o;"	;#"function_6;"function-6;ib;@o;"	;#"function_7;"function-7;ib;@o;"	;#"function_8;"function-8;ib;@o;"	;#"function_9;"function-9;ib;@o;"	;#"function_10;"function-10;ib;@;&{ ;"compact;ib;'0;@;ib;@o;,;![o;	;;;"transition-timing-function;ic;@o;"	;#"functions;"functions;ic;@o;	;;;"	-moz;id;@o;	;;;"-webkit;id;@o;	;;;"-o;id;@o;-	;.;/;id;@;0o;	;;;"-ms;id;@o;-	;.;/;id;@;0o;	;;;"-khtml;id;@o;	;;;"official;id;@;&{ ;"experimental;[ ;ie;'0;@;i`;'0;@o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;[ ;ih;@o; ;![[o;";#"delay_1;"delay-1;@o;"	;#"default_transition_delay;"default-transition-delay;im;@[o;";#"delay_2;"delay-2;@o;;F;in;@[o;";#"delay_3;"delay-3;@o;;F;io;@[o;";#"delay_4;"delay-4;@o;;F;ip;@[o;";#"delay_5;"delay-5;@o;;F;iq;@[o;";#"delay_6;"delay-6;@o;;F;ir;@[o;";#"delay_7;"delay-7;@o;;F;is;@[o;";#"delay_8;"delay-8;@o;;F;it;@[o;";#"delay_9;"delay-9;@o;;F;iu;@[o;";#"delay_10;"delay-10;@o;;F;iv;@;T;"transition-delay;[u;$Ê[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"string:
@lineix:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1:
@name"delay-1;ix;@	:@keywords{ ;"type-of;ix:@splat0;@	;ix;@	0[o:Sass::Tree::VariableNode:@guarded0;"delay-1:@children[ :
@expro;;[o;	;"delay_1;"delay-1;ix;@	;{ ;"unquote;ix;0;@	;ix;@	o;;0;"delays;[ ;o;%;![o;"	;#"delay_1;"delay-1;iy;@o;"	;#"delay_2;"delay-2;iy;@o;"	;#"delay_3;"delay-3;iy;@o;"	;#"delay_4;"delay-4;iy;@o;"	;#"delay_5;"delay-5;iy;@o;"	;#"delay_6;"delay-6;iy;@o;"	;#"delay_7;"delay-7;iy;@o;"	;#"delay_8;"delay-8;iy;@o;"	;#"delay_9;"delay-9;iy;@o;"	;#"delay_10;"delay-10;iy;@;&{ ;"compact;iy;'0;@;iy;@o;,;![o;	;;;"transition-delay;iz;@o;"	;#"delays;"delays;iz;@o;	;;;"	-moz;i{;@o;	;;;"-webkit;i{;@o;	;;;"-o;i{;@o;-	;.;/;i{;@;0o;	;;;"-ms;i{;@o;-	;.;/;i{;@;0o;	;;;"-khtml;i{;@o;	;;;"official;i{;@;&{ ;"experimental;[ ;i|;'0;@;iw;'0;@o;
;;;["*/* Transition all-in-one shorthand */;[ ;i;@o; ;![	[o;";#"property;"property;@o;"	;#" default_transition_property;" default-transition-property;i};@[o;";#"duration;"duration;@o;"	;#" default_transition_duration;" default-transition-duration;i~;@[o;";#"function;"function;@o;"	;#" default_transition_function;" default-transition-function;i;@[o;";#"
delay;"
delay;@o;"	;#"default_transition_delay;"default-transition-delay;i;@;T;"single-transition;[o;,;![o;%;![o;	;[	o;"	;#"property;"property;i;@o;"	;#"duration;"duration;i;@o;"	;#"function;"function;i;@o;"	;#"
delay;"
delay;i;@;:
space;i;@;&{ ;"compact;i;'0;@;&{ ;"transition;[ ;i;'0;@;i;'0;@o; ;![[o;";#"transition_1;"transition-1;@o;	;;;"default;i;@[o;";#"transition_2;"transition-2;@o;;F;i;@[o;";#"transition_3;"transition-3;@o;;F;i;@[o;";#"transition_4;"transition-4;@o;;F;i;@[o;";#"transition_5;"transition-5;@o;;F;i;@[o;";#"transition_6;"transition-6;@o;;F;i;@[o;";#"transition_7;"transition-7;@o;;F;i;@[o;";#"transition_8;"transition-8;@o;;F;i;@[o;";#"transition_9;"transition-9;@o;;F;i;@[o;";#"transition_10;"transition-10;@o;;F;i;@;T;"transition;[u;$÷[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"default:
@linei:@options{ :@operator:eq:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;i;@	;i;@	0[o:Sass::Tree::VariableNode:@guarded0;"transition-1:@children[ :
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::List	;
[	o;	;" default_transition_property;" default-transition-property;i;@	o;	;" default_transition_duration;" default-transition-duration;i;@	o;	;" default_transition_function;" default-transition-function;i;@	o;	;"default_transition_delay;"default-transition-delay;i;@	:@separator:
space;i;@	:@keywords{ ;"compact;i:@splat0;@	;i;@	o;;0;"transitions;[ ;o;;F;i;@;i;@u;$[o:Sass::Script::Operation
:@operand2o; 
;o:Sass::Script::String	:
@type:identifier:@value"	list:
@linei:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o;;[o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;i;@
o:Sass::Script::Number:@numerator_units[ :@original"1;
i;i;@
:@denominator_units[ :@keywords{ ;"nth;i:@splat0;@
;{ ;"type-of;i;0;@
;i;@
;:and;o; 
;o;	;;	;
"	list;i;@
;;;o;;[o;	;"transition_1;"transition-1;i;@
;{ ;"type-of;i;0;@
;i;@
;i;@
u:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@name"transitions:@children[ :
@expro:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1:
@linei:@options{ o;	;"transition_2;"transition-2;i;@o;	;"transition_3;"transition-3;i;@o;	;"transition_4;"transition-4;i;@o;	;"transition_5;"transition-5;i;@o;	;"transition_6;"transition-6;i;@o;	;"transition_7;"transition-7;i;@o;	;"transition_8;"transition-8;i;@o;	;"transition_9;"transition-9;i;@o;	;"transition_10;"transition-10;i;@:@keywords{ ;"compact;i:@splat0;@;i;@[o:Sass::Tree::VariableNode:@guarded0;"transitions:@children[ :
@expro;;[o;	;"transition_1;"transition-1;i;@
o;;[o;	;"transition_2;"transition-2;i;@
o;	;"transition_3;"transition-3;i;@
o;	;"transition_4;"transition-4;i;@
o;	;"transition_5;"transition-5;i;@
o;	;"transition_6;"transition-6;i;@
o;	;"transition_7;"transition-7;i;@
o;	;"transition_8;"transition-8;i;@
o;	;"transition_9;"transition-9;i;@
o;	;"transition_10;"transition-10;i;@
;{ ;"compact;i;0;@
o;	;;	;
"
comma;i;@
;{ ;"	join;i;0;@
;i;@
o;;0;"delays;[ ;o;%;![ ;&{ ;"comma-list;i;'0;@;i;@o;;0;"has-delays;[ ;o;;F;i;@;i;@o;;0;"webkit-value;[ ;o;%;![ ;&{ ;"comma-list;i;'0;@;i;@o;;0;"moz-value;[ ;o;%;![ ;&{ ;"comma-list;i;'0;@;i;@o;;0;"o-value;[ ;o;%;![ ;&{ ;"comma-list;i;'0;@;i;@o;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;[ ;i ;@o:Sass::Tree::EachNode;T;[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;[ ;i£;@o;;0;"property;[ ;o;%;![o;"	;#"transition;"transition;i¥;@o;;[ ;"1;i;i¥;@;[ ;&{ ;"nth;i¥;'0;@;i¥;@o;;0;"duration;[ ;o;;F;i¦;@;i¦;@o;;0;"timing-function;[ ;o;;F;i§;@;i§;@o;;0;"
delay;[ ;o;;F;i¨;@;i¨;@u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@valuei:
@linei©:@options{ :@denominator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@name"transition;i©;@
:@keywords{ ;"length;i©:@splat0;@
;i©;@
0[o:Sass::Tree::VariableNode:@guarded0;"duration:@children[ :
@expro;;[o;	;"transition;"transition;i©;@
o;;[ ;	"2;
i;i©;@
;@;{ ;"nth;i©;0;@
;i©;@
u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"2:@valuei:
@lineiª:@options{ :@denominator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@name"transition;iª;@
:@keywords{ ;"length;iª:@splat0;@
;iª;@
0[o:Sass::Tree::VariableNode:@guarded0;"timing-function:@children[ :
@expro;;[o;	;"transition;"transition;iª;@
o;;[ ;	"3;
i;iª;@
;@;{ ;"nth;iª;0;@
;iª;@
u;$Y[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"3:@valuei:
@linei«:@options{ :@denominator_units[ :@operator:gt:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"transition:
@name"transition;i«;@
:@keywords{ ;"length;i«:@splat0;@
;i«;@
0[o:Sass::Tree::VariableNode:@guarded0;"
delay:@children[ :
@expro;;[o;	;"transition;"transition;i«;@
o;;[ ;	"4;
i	;i«;@
;@;{ ;"nth;i«;0;@
;i«;@
o;;0;"has-delays;[ ;o:Sass::Script::Bool;
T;i«;@
;i«;@
o;
;;;[";/* If a delay is provided without a timing function */;[ ;i­;@u;$g[o:Sass::Script::Operation
:@operand2o:!Sass::Script::UnaryOperation	:@operator:not:
@linei®:@options{ :@operando:Sass::Script::Variable	:@underscored_name"
delay:
@name"
delay;
i®;@;:and:@operand1o:Sass::Script::Funcall:
@args[o;	;"timing_function;"timing-function;
i®;@:@keywords{ ;"is-time;
i®:@splat0;@;
i®;@0[o:Sass::Tree::VariableNode:@guarded0;"
delay:@children[ :
@expro;	;"timing_function;"timing-function;
i®;@;
i®;@o;;0;"timing-function;[ ;o:Sass::Script::Bool:@valueF;
i®;@;
i®;@o;;0;"has-delays;[ ;o;;T;
i®;@;
i®;@o;
;;;["9/* Keep a list of delays in case one is specified */;[ ;i°;@o;;0;"delays;[ ;o;%;![o;"	;#"delays;"delays;i±;@o;%;![o;"	;#"
delay;"
delay;i±;@o;"	;#"
delay;"
delay;i±;@o;;["s;"0s;i ;i±;@;[ ;&{ ;"if;i±;'0;@;&{ ;"append;i±;'0;@;i±;@o;;0;"webkit-value;[ ;o;%;![o;"	;#"webkit_value;"webkit-value;i³;@o;%;![o;	;[o;%;![o;	;;;"-webkit;i³;@o;"	;#"property;"property;i³;@;&{ ;"prefixed-for-transition;i³;'0;@o;"	;#"duration;"duration;i³;@o;"	;#"timing_function;"timing-function;i³;@;;1;i³;@;&{ ;"compact;i³;'0;@;&{ ;"append;i³;'0;@;i³;@o;;0;"moz-value;[ ;o;%;![o;"	;#"moz_value;"moz-value;i´;@o;%;![o;	;[	o;%;![o;	;;;"	-moz;i´;@o;"	;#"property;"property;i´;@;&{ ;"prefixed-for-transition;i´;'0;@o;"	;#"duration;"duration;i´;@o;"	;#"timing_function;"timing-function;i´;@o;"	;#"
delay;"
delay;i´;@;;1;i´;@;&{ ;"compact;i´;'0;@;&{ ;"append;i´;'0;@;i´;@o;;0;"o-value;[ ;o;%;![o;"	;#"o_value;"o-value;iµ;@o;%;![o;	;[	o;%;![o;	;;;"-o;iµ;@o;"	;#"property;"property;iµ;@;&{ ;"prefixed-for-transition;iµ;'0;@o;"	;#"duration;"duration;iµ;@o;"	;#"timing_function;"timing-function;iµ;@o;"	;#"
delay;"
delay;iµ;@;;1;iµ;@;&{ ;"compact;iµ;'0;@;&{ ;"append;iµ;'0;@;iµ;@:	@var"transition;i¢;@:
@listo;"	;#"transitions;"transitions;i¢;@u;$Ý[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:
@linei¸:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"webkit_value;"webkit-value;i¸;	@	:
@tabsi ;["-webkit-transition:@children[ ;i¸;	@	:@prop_syntax:newo:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;[ ;i¹;	@	u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:
@lineiº:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"delays;"delays;iº;	@	:
@tabsi ;["-webkit-transition-delay:@children[ ;iº;	@	:@prop_syntax:newu;$#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:
@linei»:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"moz_value;"moz-value;i»;	@	:
@tabsi ;["-moz-transition:@children[ ;i»;	@	:@prop_syntax:newu;$[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:
@linei¼:@options{ 0[o:Sass::Tree::PropNode:@valueo; 	;"o_value;"o-value;i¼;	@	:
@tabsi ;["-o-transition:@children[ ;i¼;	@	:@prop_syntax:newo;(;o;"	;#"transitions;"transitions;i½;@;)i ;["transition;[ ;i½;@;*;+;i;'0;@o;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;[ ;iÀ;@o:Sass::Tree::FunctionNode;![[o;";#"	list;"	list;@o;	;[ ;;1;iÁ;@;T;"comma-list;[o:Sass::Tree::ReturnNode	;[ ;o;%;![o;	;[ ;;1;iÂ;@o;"	;#"	list;"	list;iÂ;@o;	;;;"
comma;iÂ;@;&{ ;"	join;iÂ;'0;@;iÂ;@;iÁ;'0;@o;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;[ ;iÅ;@o;5;![[o;";#"prefix;"prefix;@0[o;";#"property;"property;@0;T;"prefixed-for-transition;[u;$®[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list:
@lineiÇ:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"property:
@name"property;iÇ;@	:@keywords{ ;"type-of;iÇ:@splat0;@	;iÇ;@	u:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values:
@name"#transitionable-prefixed-values:
@lineiÎ:@options{ o;	;"property;	"property;
iÎ;@:@keywords{ ;	"
index;
iÎ:@splat0;@u:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@children[ :
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property:
@lineiÑ:@options{ ;iÑ;@[o:Sass::Tree::ReturnNode	:@children[ :
@expro: Sass::Script::Interpolation:@whitespace_beforei:@aftero;;0;0:@originally_textF:	@mido;	;"property;	"property;
iÏ;@:@whitespace_after0;
iÏ:@beforeo;;0;0;:originally_text;o:Sass::Script::String	:
@type:identifier:@value"-;
iÏ;@;F;
iÏ;0;@;@;F;o;	;"prefix;	"prefix;
iÏ;@;0;
iÏ;0;@;
iÏ;@[o:Sass::Tree::VariableNode:@guarded0;"new-list:@children[ :
@expro;;[ ;{ ;"comma-list;iÈ;0;@	;iÈ;@	o:Sass::Tree::EachNode:@has_childrenT;[o;;0;"new-list;[ ;o;;[o;	;"new_list;"new-list;iÊ;@	o;;[o;	;"prefix;"prefix;iÊ;@	o;	;"v;"v;iÊ;@	;{ ;"prefixed-for-transition;iÊ;0;@	;{ ;"append;iÊ;0;@	;iÊ;@	:	@var"v;iÉ;@	:
@listo;	;"property;"property;iÉ;@	o:Sass::Tree::ReturnNode	;[ ;o;	;"new_list;"new-list;iÌ;@	;iÌ;@	;iÆ;'0;@o;
;;;["7/* Checks if the value given is a unit of time. */;[ ;iÖ;@o;5;![[o;";#"
value;"
value;@0;T;"is-time;[u;$[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"number:
@lineiØ:@options{ :@operator:eq:@operand1o:Sass::Script::Funcall:
@args[o:Sass::Script::Variable	:@underscored_name"
value:
@name"
value;iØ;@	:@keywords{ ;"type-of;iØ:@splat0;@	;iØ;@	u:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@children[ :
@expro:Sass::Script::Bool:@valueF:
@lineiÛ:@options{ ;
iÛ;@
[o:Sass::Tree::ReturnNode	:@children[ :
@expro:!Sass::Script::UnaryOperation	;:not;iÙ;@	:@operando;	;;;iÙ;@	;o;;[o:Sass::Script::List	;
[o;	;;	;
"s;iÙ;@	o;	;;	;
"ms;iÙ;@	:@separator:
space;iÙ;@	o;;[o;	;"
value;"
value;iÙ;@	;{ ;"	unit;iÙ;0;@	;{ ;"
index;iÙ;0;@	;iÙ;@	;i×;'0;@;i;@